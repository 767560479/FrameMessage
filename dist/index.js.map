{"version":3,"file":"index.js","sources":["../src/utils.ts","../src/reaction.ts","../src/responsable.ts","../src/server.ts","../src/client.ts"],"sourcesContent":["export const WILDCARD = \"*\"; // 通配符\n\n// 判断是否是window 原生函数\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const isNative = (fn: Function): boolean => {\n  return /\\[native code\\]/.test(fn.toString());\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport function noop() {}\n\nexport function warn(...log: any[]) {\n  const print = console.warn ?? console.log;\n  print(...log);\n}\n\n// 生成id\nexport function generateUid() {\n  return Number(Math.floor(Math.random() * 1000000) + Date.now()).toString(36);\n}\n","import { TaskId } from \"./types\";\nimport { generateUid } from \"./utils\";\n\nexport enum STATUS {\n  success = \"success\",\n  failure = \"failure\",\n}\n\nenum REACTION_TYPE {\n  request = \"reaction_request\",\n  response = \"reaction_response\",\n}\n\nabstract class Reaction {\n  protected constructor(\n    public _reactType: REACTION_TYPE,\n    public _id: TaskId = generateUid(),\n    public type: string,\n    public data: any = null\n  ) {\n    this._id = _id;\n    this.type = type;\n    this.data = data;\n    this._reactType = _reactType;\n  }\n}\n\ninterface RequestOption {\n  type?: string;\n  data?: any;\n  id?: string;\n}\n\n// 响应请求\nexport class Request extends Reaction {\n  constructor({ type, id, data }: RequestOption) {\n    super(REACTION_TYPE.request, id, type as string, data);\n  }\n\n  // 是否请求实例\n  static isRequest(req: any) {\n    return req._reactType === REACTION_TYPE.request;\n  }\n}\n\ninterface ResponseOptions extends RequestOption {\n  status?: STATUS;\n}\n\n// 响应返回\nexport class Response extends Reaction {\n  status: STATUS;\n  constructor({ type, id, data, status }: ResponseOptions) {\n    super(REACTION_TYPE.response, id, type as string, data);\n    this.status = status ?? STATUS.success;\n  }\n\n  static isResponse(res: any) {\n    return res._reactType === REACTION_TYPE.response;\n  }\n}\n\n// client响应任务\nexport class Task {\n  constructor(\n    public req: Request,\n    public res: Response | null,\n    public resolve: (res: Response) => void,\n    public reject: (reason: any) => void\n  ) {\n    this.req = req;\n    this.res = res;\n    this.resolve = resolve;\n    this.reject = reject;\n  }\n}\n","import { Request, Response, STATUS } from \"./reaction\";\nimport { warn } from \"./utils\";\n\n// Server端响应\nexport default class Responsable {\n  anwsered: boolean;\n  constructor(private readonly _request: Request, public event: MessageEvent) {\n    this._request = _request;\n    this.event = event;\n    this.anwsered = false;\n  }\n\n  /**\n   * 操作成功响应客户端消息\n   * @param data 相应数据\n   */\n  public success(data: any) {\n    if (this.anwsered) return warn(\"this request has been anwsered\");\n\n    if (this.event.source) {\n      const { type, _id } = this._request;\n      const res = new Response({ type, data, status: STATUS.success, id: _id });\n      debugger;\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      this.event.source.postMessage(res, \"*\");\n      this.anwsered = true;\n    }\n  }\n\n  /**\n   * 操作失败响应客户端消息\n   * @param data 相应数据\n   */\n  public error(data: any) {\n    if (this.anwsered) return warn(\"this request has been anwsered\");\n\n    if (this.event.source) {\n      const { type, _id } = this._request;\n      const res = new Response({ type, data, status: STATUS.failure, id: _id });\n      debugger;\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      this.event.source.postMessage(res, \"*\");\n      this.anwsered = true;\n    }\n  }\n}\n","import { Self, MessageType, MessageListener, Next } from \"./types\";\nimport { noop, isNative } from \"./utils\";\nimport { Request } from \"./reaction\";\nimport Responsable from \"./responsable\";\n\ntype HandlerFn = (req: Request, res: Responsable, next: Next) => Promise<any>;\ntype ErrorHandler = (err: any, req: Request, res: Responsable) => void; // 错误处理\ntype NotFoundErrorHandler = (req: Request, res: Responsable) => void; // 404 处理\ninterface ServerOption {\n  self?: Self;\n  errorHandler?: ErrorHandler;\n}\n\n// 执行函数\nclass Handler {\n  constructor(public type: MessageType, public fn: HandlerFn) {\n    this.type = type;\n    this.fn = fn;\n  }\n}\n\n// 默认失败执行函数\nconst defaultErrorHandler: ErrorHandler = (err, _req, res) => {\n  if (!res.anwsered) {\n    res.error(err);\n  }\n};\n\n// 404 失败执行函数\nconst notFoundErrorHandler: NotFoundErrorHandler = (req, res) => {\n  res.error(`the type of ${req.data.type} has not been found`);\n};\n\nexport default class Server {\n  self: Self;\n  handlers: Handler[];\n  errorHandler: ErrorHandler;\n  private notFoundErrorHandler: NotFoundErrorHandler;\n  private _msgListener: MessageListener;\n\n  constructor(option: ServerOption = {}) {\n    this.self = option.self ?? self;\n    this.handlers = []; // 执行函数集合\n    this._msgListener = noop;\n    this.errorHandler = option.errorHandler ?? defaultErrorHandler;\n    this.notFoundErrorHandler = notFoundErrorHandler;\n\n    if (!isNative(this.self.postMessage)) {\n      throw new TypeError(\n        \"`self` parameter must contain native `postMessage` method\"\n      );\n    }\n\n    this.open();\n  }\n\n  // 开启Server端监听\n  open() {\n    this._msgListener = this._receiver.bind(this);\n    this.self.addEventListener(\"message\", this._msgListener);\n  }\n\n  // 关闭Server端监听\n  close() {\n    this.self.removeEventListener(\"message\", this._msgListener);\n    this._msgListener = noop;\n  }\n\n  /** 注册监听事件\n   * @param {MessageType} type\n   * @param {HandlerFn} handler\n   */\n  public listen(type: MessageType, handler: HandlerFn) {\n    this.handlers.push(new Handler(type, handler));\n  }\n\n  /** 接收事件信息并处理\n   * @param {MessageEvent} event\n   */\n  private async _receiver(event: MessageEvent) {\n    // eslint-disable-next-line no-debugger\n    debugger;\n    const { type, data, _id } = event.data;\n    const req = new Request({ type, data, id: _id });\n    const res = new Responsable(req, event);\n\n    const handlers = this.handlers.filter((handler) => {\n      return handler.type === type;\n    });\n\n    let index = 0;\n    const next = async () => {\n      const handler = handlers[index++];\n      if (handler) {\n        try {\n          await handler.fn(req, res, next); // 执行完毕需要可以返回数据\n        } catch (err) {\n          this.errorHandler(err, req, res);\n        }\n      } else {\n        this.notFoundErrorHandler(req, res);\n      }\n    };\n\n    await next();\n  }\n}\n","/* eslint-disable no-debugger */\nimport { Self, MessageType, MessageListener, TasksMap } from \"./types\";\nimport { isNative, warn, noop } from \"./utils\";\nimport { Request, Response, Task, STATUS } from \"./reaction\";\n\ntype ClientOption = {\n  self?: Self;\n};\n\nexport default class Client {\n  target: Self;\n  origin: string;\n  self: Self;\n  tasks: TasksMap<string, Task>;\n  private _msgListener: MessageListener;\n\n  constructor(target: Self, origin = \"*\", option: ClientOption = {}) {\n    this.target = target;\n    this.origin = origin;\n    this.self = option.self ?? self;\n    this.tasks = Object.create(null);\n    this._msgListener = noop;\n    this.open();\n\n    // target 必须是带有原生window.postmessage方法\n    if (!isNative(target.postMessage)) {\n      throw new TypeError(\n        \"The first parameter must contain native `postMessage` method\"\n      );\n    }\n  }\n\n  // 开启Client端监听\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  open() {\n    this._msgListener = this._receiver.bind(this);\n    this.self.addEventListener(\"message\", this._msgListener);\n  }\n\n  // 关闭Client端监听\n  close() {\n    this.self.removeEventListener(\"message\", this._msgListener);\n    this._msgListener = noop;\n  }\n\n  /**触发监听，发布postmessage 事件\n   * @param {MessageType} type\n   * @param {any} data\n   * @param {string} origin\n   * @returns {Promise}  Promise 响应结果\n   */\n  request(type: MessageType, data: any, origin?: string): Promise<any> {\n    debugger;\n\n    const req = new Request({ type, data });\n    return this._request(req, origin ?? this.origin);\n  }\n\n  /** 处理request请求\n   * @param {Request} req\n   */\n  private _request(req: Request, origin: string) {\n    if (!Request.isRequest(req)) {\n      warn(\"The return value of requestInterceptor must be a valid request\");\n      return Promise.reject(req);\n    }\n    return new Promise((resolve, reject) => {\n      this.target.postMessage(req, origin);\n      this.tasks[req._id] = new Task(req, null, resolve, reject);\n    });\n  }\n\n  /**接收来自server的响应\n   * @param {MessageEvent} event\n   * */\n  private _receiver(event: MessageEvent) {\n    debugger;\n    if (!Response.isResponse(event.data)) return;\n    const { _id } = event.data;\n    const task = this.tasks[_id];\n    if (!task) return;\n\n    const res = new Response(event.data); // 根据接收信息生成一个响应对象\n    task.res = res;\n    if (res.status === STATUS.success) {\n      task.resolve(res);\n    } else {\n      task.reject(res);\n    }\n  }\n}\n"],"names":[],"mappings":"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"}